{"version":3,"sources":["node_modules/symbol-observable/es/ponyfill.js","node_modules/symbol-observable/es/index.js","node_modules/redux/es/redux.js","script.js"],"names":["symbolObservablePonyfill","root","result","Symbol","observable","self","window","global","module","Function","randomString","Math","random","toString","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","obj","Object","proto","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","arguments","Error","undefined","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","getState","subscribe","listener","isSubscribed","push","index","indexOf","splice","dispatch","action","type","listeners","i","length","replaceReducer","nextReducer","$$observable","_ref","outerSubscribe","observer","TypeError","observeState","next","unsubscribe","warning","message","console","error","e","getUndefinedStateErrorMessage","key","actionType","String","getUnexpectedStateShapeWarningMessage","inputState","reducers","unexpectedKeyCache","reducerKeys","keys","argumentName","call","match","unexpectedKeys","filter","hasOwnProperty","forEach","assertReducerShape","combineReducers","finalReducers","finalReducerKeys","shapeAssertionError","state","warningMessage","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","apply","bindActionCreators","actionCreators","boundActionCreators","_defineProperty","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","compose","_len","funcs","Array","arg","reduce","a","b","applyMiddleware","middlewares","store","_dispatch","middlewareAPI","chain","map","middleware","isCrushed","LERP","iL","iR","fRatio","greyScaleC","iG","iB","iBrightness","Lowana","energy","modLoaded","activity","activitySim","lastT","Date","min","max","startRender","log","document","getElementById","style","display","eVideo","eCanvas","eBakCanvas","iCanvasWidth","innerWidth","iCanvasHeight","innerHeight","fCanvasAspect","fVideoAspect","videoWidth","videoHeight","width","height","Render","ctx","getContext","ctxBack","beginPath","fillStyle","rect","fill","closePath","playbackRate","volume","drawImage","aPixels","getImageData","iNumPixels","cColor","data","iDeltaH","putImageData","fillText","toFixed","requestAnimationFrame","worker","Worker","addEventListener","event","load","pred","constraints","video","webCam","navigator","mediaDevices","getUserMedia","then","stream","srcObject","predictWebcam","camCanvas","tmpCtx","frame","postMessage","setTimeout","code","file","files","fileURL","URL","createObjectURL","src"],"mappings":"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","file":"script.84affbca.js","sourceRoot":"..","sourcesContent":["export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","/*\n * Copyright (c) Clinton Freeman 2020\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport { createStore } from 'redux'\n\n// LERP performs linear interpolation between the supplied values\n// iL and iR. fRatio determines the returned value. fRatio = 0,\n// will return iL and an fRatio of 1.0 will return iR.\nfunction LERP(iL, iR, fRatio) {\n  if (iL < iR) {\n    return iL + ((iR - iL) * fRatio);\n  } else {\n    return iL - ((iL - iR) * fRatio);\n  }\n}\n\n// greyScaleC takes an RGB collor value (each channel between\n// 0 and 255 and converts them to greyscale.\nfunction greyScaleC(iR, iG, iB) {\n  var iBrightness = (3*iR+4*iG+iB) >>> 3;\n  return [iBrightness, iBrightness, iBrightness];\n}\n\nfunction Lowana(state = {energy: 0,\n                         modLoaded: false,\n                         activity: false,\n                         activitySim: false,\n                         lastT: new Date()}, action) {\n\n  var energy = state.energy;\n\n  if (state.activitySim || state.activity) {\n    energy = Math.min(1, (energy + 0.025));\n  } else {\n    energy = Math.max(0, (energy - 0.05));\n  }\n\n  switch (action.type) {\n    case 'simOn':\n      //console.log('simOn');\n      return {energy: energy,\n              modLoaded: state.modLoaded,\n              activity: state.activity,\n              activitySim: true,\n              lastT: new Date()};\n\n    case 'simOff':\n      //console.log('simOff');\n      return {energy: energy,\n              modLoaded: state.modLoaded,\n              activity: state.activity,\n              activitySim: false,\n              lastT: new Date()};\n\n    case 'actOn':\n      //console.log('actOn');\n      return {energy: energy,\n              modLoaded: state.modLoaded,\n              activity: true,\n              activitySim: state.activitySim,\n              lastT: new Date()};\n\n    case 'actOff':\n      //console.log('actOff');\n      return {energy: energy,\n              modLoaded: state.modLoaded,\n              activity: false,\n              activitySim: state.activitySim,\n              lastT: new Date()};\n\n    case 'modInit':\n      //console.log('modInit');\n      return {energy: energy,\n              modLoaded: false,\n              activity: state.activity,\n              activitySim: state.activitySim,\n              lastT: new Date()};\n\n    case 'modLoad':\n      //console.log('modLoad');\n      return {energy: energy,\n              modLoaded: true,\n              activity: state.activity,\n              activitySim: state.activitySim,\n              lastT: new Date()};\n\n    case 'update':\n      //console.log('update');\n      return {energy: energy,\n              modLoaded: state.modLoaded,\n              activity: state.activity,\n              activitySim: state.activitySim,\n              lastT: new Date()};\n\n    default:\n      return state\n  }\n}\n\nlet store = createStore(Lowana);\n\nfunction startRender() {\n  console.log(\"loaded video Metadata\");\n\n  // We have succesfully loaded a video, we don't need to display a\n  // file chooser anymore.\n  document.getElementById(\"load\").style.display = 'none';\n\n  // Set up the resolution of all our canvasses\n  var eVideo = document.getElementById(\"player\");\n  var eCanvas = document.getElementById(\"canvas\");\n  var eBakCanvas = document.getElementById(\"bakCanvas\");\n\n  var iCanvasWidth = window.innerWidth;\n  var iCanvasHeight = window.innerHeight;\n  var fCanvasAspect = iCanvasWidth / iCanvasHeight;\n  var fVideoAspect = eVideo.videoWidth / eVideo.videoHeight;\n\n  eCanvas.width = iCanvasWidth;\n  eCanvas.height = iCanvasHeight;\n\n  eVideo.width = iCanvasWidth;\n  eVideo.height = eVideo.width / fVideoAspect;\n\n  eBakCanvas.width = iCanvasWidth;\n  eBakCanvas.height = eVideo.width / fVideoAspect;\n\n  console.log(\"M[\"+eVideo.videoWidth+\",\"+eVideo.videoHeight+\"]=\"+fVideoAspect);\n  console.log(\"B[\"+eBakCanvas.width+\",\"+eBakCanvas.height+\"]\");\n  console.log(\"V[\"+eVideo.width+\",\"+eVideo.height+\"]=\"+fVideoAspect);\n  console.log(\"C[\"+iCanvasWidth+\",\"+iCanvasHeight+\"]=\"+fCanvasAspect);\n\n\n  Render();\n}\n\n//\nfunction Render() {\n  var state = store.getState();\n\n  var eVideo = document.getElementById('player');\n  var eCanvas = document.getElementById('canvas');\n  var ctx = eCanvas.getContext('2d');\n  var eBackCanvas = document.getElementById('bakCanvas');\n  var ctxBack = eBackCanvas.getContext('2d');\n\n  ctx.beginPath();\n  ctx.fillStyle = \"rgb(0, 0, 0)\";\n  ctx.rect(0, 0, eCanvas.width, eCanvas.height);\n  ctx.fill();\n  ctx.closePath();\n\n  // Render the video\n  eVideo.playbackRate = LERP(0.2, 1.0, state.energy);\n  eVideo.volume = LERP(0, 1.0, state.energy);\n\n  ctxBack.drawImage(eVideo, 0, 0, eVideo.width, eVideo.height);\n  var aPixels = ctxBack.getImageData(0, 0, eVideo.width, eVideo.height);\n\n  var iNumPixels = eVideo.width * eVideo.height * 4;\n  for (var i = 0; i < iNumPixels; i = i + 4) {\n    var cColor = greyScaleC(aPixels.data[i],\n                            aPixels.data[i+1],\n                            aPixels.data[i+2]);\n\n    aPixels.data[i] = LERP(cColor[0], aPixels.data[i], state.energy);\n    aPixels.data[i+1] = LERP(cColor[1], aPixels.data[i+1], state.energy);\n    aPixels.data[i+2] = LERP(cColor[2], aPixels.data[i+2], state.energy);\n  }\n\n  var iDeltaH = (eCanvas.height - eVideo.height)/2\n  ctx.putImageData(aPixels,0,iDeltaH);\n\n  ctx.fillStyle = \"rgb(255, 255, 255)\";\n  ctx.fillText(\"Press g to simulate activity (\" + state.energy.toFixed(2) + \")\", 10, 10);\n\n  if (!state.modLoaded) {\n    ctx.fillText(\"Initalising webcam sensor.\", 10, 20)\n  }\n\n  if (state.activitySim || state.activity) {\n    ctx.fillText(\"Activity Detected\", 10, 30);\n  }\n\n  window.requestAnimationFrame(Render);\n};\n\n// Create a webworker runs tensorflow in a background\n// process so that rendering doesn't get held up by\n// object classification.\nstore.dispatch({ type: 'modInit' });\nvar worker = undefined;\nif (window.Worker) {\n  worker = new Worker('detect.js');\n\n  worker.addEventListener(\"message\", (event) => {\n    const {load} = event.data;\n    if (load === true) {\n      store.dispatch({ type: 'modLoad' });\n    }\n\n    const {pred} = event.data;\n    if (pred === true) {\n      store.dispatch({ type: 'actOn' });\n    } else if (pred === false) {\n      store.dispatch({ type: 'actOff' });\n    }\n  })\n\n  const constraints = {\n    video: true\n  };\n\n  const webCam = document.getElementById('webcam');\n  navigator.mediaDevices\n           .getUserMedia(constraints).then(function(stream) {\n    webCam.srcObject = stream;\n    webCam.addEventListener('loadeddata', predictWebcam);\n  })\n}\n\n// predictWebcam takes data from the webcam and pushes\n// it into the webworker so that it can be predicted by\n// TensorFlow.\nfunction predictWebcam() {\n  // Copy content out of webcam and into a canvas that\n  // we can farm out to the webworker.\n  const webCam = document.getElementById('webcam');\n  const camCanvas = document.getElementById('camCanvas');\n\n  camCanvas.width = webCam.videoWidth;\n  camCanvas.height = webCam.videoHeight;\n\n  const tmpCtx = camCanvas.getContext('2d');\n  tmpCtx.drawImage(webCam, 0, 0, webCam.videoWidth, webCam.videoHeight);\n  const frame = tmpCtx.getImageData(0, 0,\n                                    webCam.videoWidth, webCam.videoHeight);\n\n  worker.postMessage({data: frame});\n\n  // We don't need to go flat out predicting what's in\n  // the field of view.\n  setTimeout(predictWebcam, 500);\n}\n\n// When the 'g' key is pressed, simulate activity being\n// detected by the webcam.\ndocument.addEventListener('keypress', function(e) {\n  if (e.code === \"KeyG\") {\n    store.dispatch({ type: 'simOn' });\n  }\n})\n\n// When the 'g' key is released, stop simulating activity\n// being detected by the webcam.\ndocument.addEventListener('keyup', function(e) {\n  if (e.code === \"KeyG\") {\n    store.dispatch({ type: 'simOff' });\n  }\n})\n\ndocument.getElementById(\"load\")\n        .addEventListener(\"change\", function(e) {\n\n  var file = this.files[0];\n  var fileURL = URL.createObjectURL(file);\n\n  var eVideo = document.getElementById(\"player\");\n  eVideo.src = fileURL;\n\n  eVideo.addEventListener(\"loadedmetadata\", function(e) {\n    startRender();\n  });\n});\n\nvar eVideo = document.getElementById('player');\nif (eVideo.src) {\n  startRender();\n}\n\n"]}